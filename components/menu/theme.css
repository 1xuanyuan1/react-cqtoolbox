@import "../colors.css";
@import "../variables.css";
@import "./config.css";

.menu,
.popupMenu {
    display: block;
    margin: 0;
    padding: 0;
    list-style: none;
    white-space: nowrap;
    color: rgba(0,0,0,.65);
    outline: none;
    @apply --reset;
}

.menu {
    background: var(--menu-background-color);

    &:not(.inline) {
        .popupMenu {
            position: absolute;
            z-index: 999;
            border: 1px solid hsla(0,100%,99%,.07);
            border-radius: 4px;
            box-shadow: var(--shadow-4p);
        }

        .menuItem {
            padding: var(--menu-item-horizontal-padding);
        }
    }
}

.inline {
    .arrow.open {
        transform: rotate(180deg);
    }

    .popupMenu {
        overflow: hidden;
        border-radius: 0;
        box-shadow: none;
    }
}

.vertical {
    .popupMenu {
        top: 0;
        left: 100%;
        margin-left: 4px;
        transform-origin: top left;
    }

    .menuItem {
        color: var(--color-white);
    }

    .menuItem:first-child {
        border-radius: 4px 4px 0 0;
    }

    .menuItem:last-child {
        border-radius: 0 0 4px 4px;
    }
}

.horizontal {
    @mixin cleafix;

     & > .menuItem,
    .submenu {
        float: left;
    }

    .popupMenu {
        top: 100%;
        transform-origin: top center;
    }

    .popupMenu.left {
        left: 0;
    }

    .popupMenu.middle {
        left: -50%;
    }

    .popupMenu.right {
        right: 0;
    }

     & > .menuItem,
    .subMenuItem {
        line-height: var(--submenu-item-horizontal-height);
        height: var(--submenu-item-horizontal-height);
        padding: var(--submenu-item-horizontal-padding);
        color: var(--color-white);
    }

    .menuItem {
        color: var(--color-white);
    }

    .arrow {
        position: static;
        transform: scale(.7, .5);
    }
}

.popupMenu {
    background: var(--popupmenu-background-color);
}

.submenu {
    position: relative;
}

.menuItem,
.subMenuItem {
    font-size: var(--menu-item-font-size);
    line-height: var(--menu-item-height);
    position: relative;
    overflow: hidden;
    height: var(--menu-item-height);
    padding: 0 var(--menu-item-padding);
    user-select: none;
    color: var(--menu-item-color);

    &:not(.disabled):hover {
        cursor: pointer;
        background-color: var(--menu-item-hover-background);
    }

    &.disabled {
        pointer-events: none;
        opacity: 0.5;
    }

    &.selected {
        color: var(--menu-item-selected-color);
        background-color: var(--menu-item-selected-background);
    }

    & .icon {
        font-size: var(--menu-item-icon-font-size);
        margin-right: var(--menu-item-icon-margin-right);
        transition: all var(--animation-duration) var(--animation-curve-linear-out-slow-in);
    }
}

.arrow {
    position: absolute;
    top: 50%;
    right: 10px;
    margin-top: -.5em;
    transition: transform 0.2s ease;
    transform: rotate(0deg);
}

.caption {
    font-size: var(--font-size-normal);
}

.inlineAnim {
    transition: height var(--menu-expand-duration) var(--menu-expand-curve);
}

.verticalAnimEnter,
.verticalAnimLeave {
    animation-duration: 0.2s;
    animation-play-state: paused;
    animation-fill-mode: both;
}

.verticalAnimEnter {
    transform: scale(0);
    animation-timing-function: cubic-bezier(.08,.82,.17,1);
}

.verticalAnimEnterActive {
    animation-name: ani-ZoomBigIn;
    animation-play-state: running;
}

.verticalAnimLeave {
    animation-timing-function: cubic-bezier(.78,.14,.15,.86);
}

.verticalAnimLeaveActive {
    animation-name: ani-ZoomBigOut;
    animation-play-state: running;
}
